name: Lighthouse Performance Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Start application
        run: |
          npm start &
          sleep 30  # 애플리케이션 시작 대기

      - name: Run Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './lighthouse.config.js'
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Comment PR with Lighthouse results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            // Lighthouse 결과 읽기
            const reportPath = './lighthouse-results.json';
            if (fs.existsSync(reportPath)) {
              const results = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
              
              const commentBody = `## 🚨 Lighthouse Performance Report
              
              ### 📊 Performance Scores
              - **Performance**: ${results.summary.performance}/100
              - **Accessibility**: ${results.summary.accessibility}/100
              - **Best Practices**: ${results.summary['best-practices']}/100
              - **SEO**: ${results.summary.seo}/100
              
              ### ⚠️ Issues Found
              ${results.summary.performance < 90 ? '🔴 Performance score is below 90!' : '✅ Performance score is good!'}
              
              ---
              *Lighthouse audit completed*`;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }

